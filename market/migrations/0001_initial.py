# Generated by Django 3.1 on 2021-04-24 18:06

import core.formatChecker
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de modificación')),
            ],
            options={
                'verbose_name': 'Actividad económica',
                'verbose_name_plural': 'Actividades económica',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de modificación')),
            ],
            options={
                'verbose_name': 'Municipio',
                'verbose_name_plural': 'Municipios',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de modificación')),
            ],
            options={
                'verbose_name': 'Método de pago',
                'verbose_name_plural': 'Métodos de pago',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='SubActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de modificación')),
                ('activity', models.ForeignKey(default='Servicios', on_delete=django.db.models.deletion.CASCADE, to='market.activity', verbose_name='Actividad')),
            ],
            options={
                'verbose_name': 'Subactividad',
                'verbose_name_plural': 'Subactividades',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de modificación')),
                ('city', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='market.city', verbose_name='Municipio')),
            ],
            options={
                'verbose_name': 'Localidad',
                'verbose_name_plural': 'Localidades',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('postal_code', models.CharField(max_length=100, verbose_name='Código postal')),
                ('colony', models.CharField(max_length=100, verbose_name='Colonia')),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Calle')),
                ('ext_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número exterior')),
                ('int_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número interior')),
                ('to_home', models.BooleanField(blank=True, null=True, verbose_name='Servicio a domicilio')),
                ('delivery_options', models.CharField(blank=True, choices=[('N', 'Colonias cercanas'), ('C', 'Toda la ciudad'), ('O', 'Otras ciudades')], max_length=1, null=True, verbose_name='Entrega en:')),
                ('platform', models.CharField(blank=True, max_length=300, null=True, verbose_name='Url Plataforma')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Telefono')),
                ('cellphone', models.CharField(max_length=100, verbose_name='Telefono Móvil')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='Correo electrónico')),
                ('image', core.formatChecker.ContentTypeRestrictedFileField(blank=True, default='company/default/noimage.jpg', null=True, upload_to='company', verbose_name='Imagen')),
                ('let_me_know_more', models.BooleanField(blank=True, null=True, verbose_name='Desea contarnos mas')),
                ('join', models.BooleanField(blank=True, null=True, verbose_name='Quiere se parte')),
                ('lat', models.FloatField(default=0.0, verbose_name='Latitud')),
                ('long', models.FloatField(default=0.0, verbose_name='Longitud')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de registro')),
                ('operation_start', models.DateTimeField(verbose_name='Inicio de operaciones')),
                ('registerSAT', models.BooleanField(default=False, verbose_name='Registrado en el SAT')),
                ('product1', core.formatChecker.ContentTypeRestrictedFileField(blank=True, default='company/default/noimage.jpg', null=True, upload_to='company', verbose_name='Producto 1')),
                ('product2', core.formatChecker.ContentTypeRestrictedFileField(blank=True, default='company/default/noimage.jpg', null=True, upload_to='company', verbose_name='Producto 2')),
                ('product3', core.formatChecker.ContentTypeRestrictedFileField(blank=True, default='company/default/noimage.jpg', null=True, upload_to='company', verbose_name='Producto 3')),
                ('product4', core.formatChecker.ContentTypeRestrictedFileField(blank=True, default='company/default/noimage.jpg', null=True, upload_to='company', verbose_name='Producto 4')),
                ('product5', core.formatChecker.ContentTypeRestrictedFileField(blank=True, default='company/default/noimage.jpg', null=True, upload_to='company', verbose_name='Producto 5')),
                ('product6', core.formatChecker.ContentTypeRestrictedFileField(blank=True, default='company/default/noimage.jpg', null=True, upload_to='company', verbose_name='Producto 6')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.city', verbose_name='Municipio')),
                ('payment_method', models.ManyToManyField(to='market.Payment', verbose_name='Metodo de pago')),
                ('subactivity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.subactivity', verbose_name='Actividad especifica')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Empresa sonorense',
                'verbose_name_plural': 'Empresas sonorenses',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Colony',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de modificación')),
                ('locality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.locality', verbose_name='Localidad')),
            ],
            options={
                'verbose_name': 'Colonia',
                'verbose_name_plural': 'Colonias',
                'ordering': ['-created'],
            },
        ),
    ]
